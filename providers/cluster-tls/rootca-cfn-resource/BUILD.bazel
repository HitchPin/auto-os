load("@aspect_bazel_lib//lib:copy_file.bzl", "copy_file")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_cross_binary", "go_library")
load("@rules_pkg//:pkg.bzl", "pkg_zip")

# gazelle:build_tags linux,amd64,lambda.norpc,logging
# gazelle:prefix github.com/HitchPin/providers/cluster-tls/rootca-cfn-resource

go_library(
    name = "lib",
    embed = [
        "//providers/cluster-tls/rootca-cfn-resource/cmd:cmd_lib",
    ],
    importpath = "github.com/HitchPin/providers/cluster-tls/rootca-cfn-resource",
    visibility = ["//visibility:public"],
    deps = [
        "//providers/cluster-tls/rootca-cfn-resource/cmd:cmd_lib",
    ],
)

# keep
go_binary(
    name = "bin",
    embed = [":lib"],
    goarch = "amd64",
    goos = "linux",
    gotags = [
        #"logging",
        "lambda.norpc",
    ],
    visibility = ["//visibility:public"],
)

copy_file(
    # Name of the rule.
    name = "copy_amd64",
    # A Label
    src = ":bin",
    # Path of the output file, relative to this package.
    out = "bootstrap",
)

pkg_zip(
    name = "zip",
    srcs = [
        ":copy_amd64",
    ],
    package_file_name = "handler.zip",
    visibility = ["//visibility:public"],
)

copy_file(
    # Name of the rule.
    name = "schema-json",
    # A Label
    src = "hitchpin-autoos-rootca.json",
    # Path of the output file, relative to this package.
    out = "schema.json",
)

pkg_zip(
    name = "resourceProvider",
    srcs = [
        ".rpdk-config",
        ":schema-json",
        ":zip",
    ],
    package_file_name = "bundle.zip",
    visibility = ["//visibility:public"],
)

copy_file(
    # Name of the rule.
    name = "resourceRoleStack",
    # A Label
    src = "resource-role.yaml",
    # Path of the output file, relative to this package.
    out = "stack.yml",
    visibility = ["//visibility:public"],
)

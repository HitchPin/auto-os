load("@aspect_rules_js//js:defs.bzl", "js_binary", "js_run_binary")
load("@npm//:defs.bzl", "npm_link_all_packages")

npm_link_all_packages(name = "node_modules")

SRC_PATTERNS = [
    "**/*.json",
    "**/*.js",
    "**/*.ts",
    "**/*.py",
    "**/*.sh",
    "**/*.yml",
    "**/*.yaml"
]

EX_PATTERNS = [
    "test/**/*",
    "node_modules",
    "cdk.out/**/*",
    "dist/**/*",
    ".vscode/**/*",
]

SOURCES = glob(
    include = SRC_PATTERNS,
    allow_empty = True,
    exclude = EX_PATTERNS,
)

DEPS = [
        ":node_modules/@types/jest",
        ":node_modules/@types/node",
        ":node_modules/aws-cdk",
        ":node_modules/aws-cdk-lib",
        ":node_modules/constructs",
        ":node_modules/source-map-support",
        ":node_modules/ts-jest",
        ":node_modules/ts-node",
        ":node_modules/typescript",
        "//infra/aos-assembly-infra:node_modules",
        "//infra/runner-container-image:tarball"
]

js_binary(
    name = "bin-cdk",
    log_level = "debug",
    copy_data_to_bin = True,
    include_npm = True,
    # Reference the location where the acorn npm module was linked in the root Bazel package
    data = SOURCES.extend(DEPS),
    entry_point = "run-cdk.js"
)

js_run_binary(
    # Target name
    name = "aos-deployment",
    args = ["synth", "--quiet", "--profile", "hitchpin"],
    log_level = "debug",
    tool = ":bin-cdk",
    srcs = SOURCES,
    chdir = package_name(),
    out_dirs = ["cdk.out"],
    use_execroot_entry_point = True,
    copy_srcs_to_bin = True,
    silent_on_success = False,
    env = {
        "CONTAINER_TARBALL": "$(location //infra/runner-container-image:tarball)"
    },
    execution_requirements = {
        "requires-network": "yes"
    }
)

js_run_binary(
    # Target name
    name = "deploy",
    args = ["deploy", "--profile", "hitchpin"],
    log_level = "debug",
    tool = ":bin-cdk",
    srcs = SOURCES,
    chdir = package_name(),
    out_dirs = ["cdk.out"],
    use_execroot_entry_point = True,
    copy_srcs_to_bin = True,
    silent_on_success = False,
    env = {
        "CONTAINER_TARBALL": "$(location //infra/runner-container-image:tarball)"
    },
    execution_requirements = {
        "requires-network": "yes",
        "no-sandbox": "yes"
    }
)
